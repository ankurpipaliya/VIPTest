//
//  CommentViewController.swift
//  VIPTest
//
//  Created by AnkurPipaliya on 13/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CommentProtocol: class {
    func showActivityIndicator()
    func hideActivityIndicator()
    func checkInternectConnectionAvailable() -> Bool
    func displayAlert(string:String)
    func displayNoNetworkAlert(complationNoNetwork:(()->())?)
    func successfullyGetComment(data:[CommentModel]?)
}

class CommentViewController: BaseViewController, CommentProtocol {
  
    //var interactor : CommentInteractorProtocol?
    var presenter : CommentPresentationProtocol?
    var getId:Int?
    var arrComment = [CommentModel]()
    @IBOutlet weak var tblComment: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = CommentInteractor()
        let presenter = CommentPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    // MARK: UIView life cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUI()
        print(" passed ID: \(getId)")
        presenter?.apiCallingForComment(_id: getId ?? 0, model: arrComment)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.setLocalization()
    }
    
    //MARK: Set UI and Localization
    func setUI() {
        
    }
    
    func setLocalization() {
        
    }
    
    // MARK: CommentProtocol Methods
    func showActivityIndicator() {
        self.showSpinner()
    }
    
    func hideActivityIndicator() {
        self.hideSpinner()
    }
    
    
    func checkInternectConnectionAvailable() -> Bool {
        if !self.isInternetAvailable() {
            return false
        }
        return true
    }
    
    func displayAlert(string:String) {
        self.showAlert(title: "", message: string)
    }
    
    func displayNoNetworkAlert(complationNoNetwork:(()->())? = nil) {
        let strTitle = complationNoNetwork != nil ? KeyMessages.kALERT_TRY_AGAIN : ""
        self.showNoNetworkAlert(strBtnTitle: strTitle) {
            complationNoNetwork?()
        }
    }
    
    @IBAction func btnBackAction(_ sender: UIButton) {
        self.popVC()
    }
    func successfullyGetComment(data: [CommentModel]?) {
        guard let arr = data, !arr.isEmpty else {return}
        print( " total Values in comment : \(arr.count)")
       // var arrnew = [PostModel]()
       
        self.arrComment = arr
        DispatchQueue.main.async {
            self.tblComment.reloadData()
        }
    }
    
}

extension CommentViewController : UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrComment.count
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "commentCell", for: indexPath) as! commentCell
        
        let index = arrComment[indexPath.row]
        cell.lblid?.text =  "\(index.postId)"
        cell.lblbody.text = index.body
        cell.lblName.text = index.name
        cell.lblEmail.text = index.email
        return cell
    }
}
extension CommentViewController : UITableViewDelegate {
    
}
