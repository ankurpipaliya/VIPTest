//
//  CommentInteractor.swift
//  VIPTest
//
//  Created by AnkurPipaliya on 13/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CommentInteractorProtocol {
    func fetchCommentfromApi(_id:Int, model: [CommentModel])
}

class CommentInteractor: CommentInteractorProtocol  {
    var presenter: CommentPresentationProtocol?
    var comment = [CommentModel]()
    let endpoint = "/comments"
    let url = "https://jsonplaceholder.typicode.com/posts/"
    
    
    func fetchCommentfromApi(_id:Int, model:[CommentModel] ){
        
        HTTPManager.shared.get(urlString: url + "\(_id)" + endpoint) { [weak self] ress in
            guard let self = self else {return}
            switch ress {
            case .failure(let err):
                print ("failure", err)
            case .success(let dat):
                let decoder = JSONDecoder()
                do {
                    self.comment = try decoder.decode([CommentModel].self, from: dat)
                    
                //    self.presenter?.apiResponseForcomment(body: self.comment, message: "success")
                   // completion(.success(try decoder.decode([PostModel].self, from: dat)))
                    self.presenter?.apiResponseForcomment(body: self.comment)
                } catch let err{
                    print("error in completon \(err)")
                }
            }
        }
    }
    
}

